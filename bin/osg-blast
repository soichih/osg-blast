#!/bin/bash

if [ -d input ]; then
    echo "input directory already exists. please remove before running"
    exit 1
fi

echo "Running Test"
mkdir -p test-output
osg-blast-test --config config.json --out stats.json --outdir test-output
if [ $? -ne 0 ]; then
    echo "test failed"
    exit 1
fi

echo "Splitting input file"
mkdir input
osg-blast-split --config config.json --stats stats.json --outdir input
if [ $? -ne 0 ]; then
    echo "split failed"
    exit 1
fi

echo "Generating condor dag"
osg-blast-gendag --config config.json --input input --outdir output
if [ $? -ne 0 ]; then
    echo "failed to generate condor dag"
    exit 1
fi

echo "Submitting dag"
mkdir log
mkdir output

#http://research.cs.wisc.edu/htcondor/manual/v7.6/3_3Configuration.html
export _CONDOR_DAGMAN_MAX_JOB_HOLDS=0 #prevent dag from removing node if there are more than 100 processes held in a node
condor_submit_dag -f -maxidle 50000 blast.dag

echo "waiting for workflow to finish.. you can kill this script anytime without aborting your workflow"
sleep 10 #is 10 seconds enough?
condor_wait blast.dag.dagman.log
if [ $? -ne 0 ]; then
    echo "workflow failed"
    exit 1
fi

echo "checking for output"
osg-blast-checkoutput --config config.json --indir input --outdir output
if [ $? -ne 0 ]; then
    echo "incomplete output.. skipping merge"
    exit 1
fi

